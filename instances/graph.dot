digraph {
	rankdir=LR;
	compound=true;
	newrank=true;
	fontname="Helvetica";

	// Style par défaut
	node [style=filled, fontname="Helvetica", fontsize=10, penwidth=1];
	edge [color=gray40, fontname="Helvetica", fontsize=9];

	// Variables (jaune clair)
	node [shape=note, fillcolor="#fff2b2"];
	"[root] var.host_aws_access_key_id"
	"[root] var.host_aws_default_region"
	"[root] var.host_aws_secret_access_key"
	"[root] var.instances"

	// Providers (rouge clair)
	node [shape=diamond, fillcolor="#fbb4ae"];
	"[root] provider[\"registry.opentofu.org/kreuzwerker/docker\"]"

	// Data (vert clair)
	node [shape=box, fillcolor="#ccebc5"];
	"[root] module.docker_instances.data.docker_network.custom_network (expand)"

	// Docker container/image (bleu clair)
	node [shape=box, fillcolor="#a6cee3"];
	"[root] module.docker_instances.docker_container.instance (expand)"
	"[root] module.docker_instances.docker_image.instance (expand)"

	// Locals (violet clair)
	node [shape=ellipse, fillcolor="#d8bdfc"];
	"[root] local.processed_instances (expand)"

	// Modules généraux (gris clair)
	node [shape=box, fillcolor="#eeeeee"];
	"[root] module.docker_instances (expand)"
	"[root] module.docker_instances (close)"
	"[root] root"

	// Relations
	"[root] local.processed_instances (expand)" -> "[root] var.host_aws_access_key_id (expand, reference)"
	"[root] local.processed_instances (expand)" -> "[root] var.host_aws_default_region (expand, reference)"
	"[root] local.processed_instances (expand)" -> "[root] var.host_aws_secret_access_key (expand, reference)"
	"[root] local.processed_instances (expand)" -> "[root] var.instances (expand, reference)"
	"[root] module.docker_instances (close)" -> "[root] module.docker_instances.docker_container.instance (expand)"
	"[root] module.docker_instances (expand)" -> "[root] local.processed_instances (expand)"
	"[root] module.docker_instances.data.docker_network.custom_network (expand)" -> "[root] module.docker_instances.var.network_name (expand, reference)"
	"[root] module.docker_instances.data.docker_network.custom_network (expand)" -> "[root] provider[\"registry.opentofu.org/kreuzwerker/docker\"]"
	"[root] module.docker_instances.docker_container.instance (expand)" -> "[root] module.docker_instances.data.docker_network.custom_network (expand)"
	"[root] module.docker_instances.docker_container.instance (expand)" -> "[root] module.docker_instances.docker_image.instance (expand)"
	"[root] module.docker_instances.docker_container.instance (expand)" -> "[root] module.docker_instances.var.acces_to_docker (expand, reference)"
	"[root] module.docker_instances.docker_container.instance (expand)" -> "[root] module.docker_instances.var.command (expand, reference)"
	"[root] module.docker_instances.docker_container.instance (expand)" -> "[root] module.docker_instances.var.container_name (expand, reference)"
	"[root] module.docker_instances.docker_container.instance (expand)" -> "[root] module.docker_instances.var.env_vars (expand, reference)"
	"[root] module.docker_instances.docker_container.instance (expand)" -> "[root] module.docker_instances.var.has_volume (expand, reference)"
	"[root] module.docker_instances.docker_container.instance (expand)" -> "[root] module.docker_instances.var.ports (expand, reference)"
	"[root] module.docker_instances.docker_container.instance (expand)" -> "[root] module.docker_instances.var.volume_name (expand, reference)"
	"[root] module.docker_instances.docker_image.instance (expand)" -> "[root] module.docker_instances.var.image (expand, reference)"
	"[root] module.docker_instances.docker_image.instance (expand)" -> "[root] provider[\"registry.opentofu.org/kreuzwerker/docker\"]"
	"[root] module.docker_instances.var.acces_to_docker (expand, input)" -> "[root] module.docker_instances (expand)"
	"[root] module.docker_instances.var.acces_to_docker (expand, reference)" -> "[root] module.docker_instances.var.acces_to_docker (expand, input)"
	"[root] module.docker_instances.var.command (expand, input)" -> "[root] module.docker_instances (expand)"
	"[root] module.docker_instances.var.command (expand, reference)" -> "[root] module.docker_instances.var.command (expand, input)"
	"[root] module.docker_instances.var.container_name (expand, input)" -> "[root] module.docker_instances (expand)"
	"[root] module.docker_instances.var.container_name (expand, reference)" -> "[root] module.docker_instances.var.container_name (expand, input)"
	"[root] module.docker_instances.var.env_vars (expand, input)" -> "[root] module.docker_instances (expand)"
	"[root] module.docker_instances.var.env_vars (expand, reference)" -> "[root] module.docker_instances.var.env_vars (expand, input)"
	"[root] module.docker_instances.var.has_volume (expand, input)" -> "[root] module.docker_instances (expand)"
	"[root] module.docker_instances.var.has_volume (expand, reference)" -> "[root] module.docker_instances.var.has_volume (expand, input)"
	"[root] module.docker_instances.var.image (expand, input)" -> "[root] module.docker_instances (expand)"
	"[root] module.docker_instances.var.image (expand, reference)" -> "[root] module.docker_instances.var.image (expand, input)"
	"[root] module.docker_instances.var.network_name (expand, input)" -> "[root] module.docker_instances (expand)"
	"[root] module.docker_instances.var.network_name (expand, reference)" -> "[root] module.docker_instances.var.network_name (expand, input)"
	"[root] module.docker_instances.var.ports (expand, input)" -> "[root] module.docker_instances (expand)"
	"[root] module.docker_instances.var.ports (expand, reference)" -> "[root] module.docker_instances.var.ports (expand, input)"
	"[root] module.docker_instances.var.volume_name (expand, input)" -> "[root] module.docker_instances (expand)"
	"[root] module.docker_instances.var.volume_name (expand, reference)" -> "[root] module.docker_instances.var.volume_name (expand, input)"
	"[root] provider[\"registry.opentofu.org/kreuzwerker/docker\"] (close)" -> "[root] module.docker_instances.docker_container.instance (expand)"
	"[root] root" -> "[root] module.docker_instances (close)"
	"[root] root" -> "[root] provider[\"registry.opentofu.org/kreuzwerker/docker\"] (close)"
	"[root] var.host_aws_access_key_id (expand, reference)" -> "[root] var.host_aws_access_key_id"
	"[root] var.host_aws_default_region (expand, reference)" -> "[root] var.host_aws_default_region"
	"[root] var.host_aws_secret_access_key (expand, reference)" -> "[root] var.host_aws_secret_access_key"
	"[root] var.instances (expand, reference)" -> "[root] var.instances"
}
