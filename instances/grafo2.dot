digraph {
  node [shape=box];

  // Entrées utilisateur (notes)
  "var.instances" [shape=note];
  "var.host_aws_access_key_id" [shape=note];
  "var.host_aws_secret_access_key" [shape=note];
  "var.host_aws_default_region" [shape=note];

  "var.image" [shape=note];
  "var.container_name" [shape=note];
  "var.command" [shape=note];
  "var.ports" [shape=note];
  "var.env_vars" [shape=note];
  "var.volume_name" [shape=note];
  "var.has_volume" [shape=note];
  "var.acces_to_docker" [shape=note];
  "var.network_name" [shape=note];

  // Bloc local
  "local.processed_instances";

  // Module
  "module.docker_instances";

  // Ressources du module
  "docker_container.instance";
  "docker_image.instance";
  "docker_network.custom_network";

  // Provider
  "provider[kreuzwerker/docker]" [shape=diamond];

  // Flux des données
  "var.instances" -> "local.processed_instances";
  "var.host_aws_access_key_id" -> "local.processed_instances";
  "var.host_aws_secret_access_key" -> "local.processed_instances";
  "var.host_aws_default_region" -> "local.processed_instances";

  "local.processed_instances" -> "module.docker_instances";

  "var.image" -> "module.docker_instances";
  "var.container_name" -> "module.docker_instances";
  "var.command" -> "module.docker_instances";
  "var.ports" -> "module.docker_instances";
  "var.env_vars" -> "module.docker_instances";
  "var.volume_name" -> "module.docker_instances";
  "var.has_volume" -> "module.docker_instances";
  "var.acces_to_docker" -> "module.docker_instances";
  "var.network_name" -> "module.docker_instances";

  "module.docker_instances" -> "docker_container.instance";
  "module.docker_instances" -> "docker_image.instance";
  "module.docker_instances" -> "docker_network.custom_network";

  "provider[kreuzwerker/docker]" -> "docker_container.instance";
  "provider[kreuzwerker/docker]" -> "docker_image.instance";
  "provider[kreuzwerker/docker]" -> "docker_network.custom_network";
}
