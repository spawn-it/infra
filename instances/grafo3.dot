digraph {
  node [shape=box];

  // Variables d'entrÃ©e
  "var.instances" [shape=note];
  "var.host_aws_access_key_id" [shape=note];
  "var.host_aws_secret_access_key" [shape=note];
  "var.host_aws_default_region" [shape=note];

  "var.image" [shape=note];
  "var.container_name" [shape=note];
  "var.command" [shape=note];
  "var.ports" [shape=note];
  "var.env_vars" [shape=note];
  "var.volume_name" [shape=note];
  "var.has_volume" [shape=note];
  "var.acces_to_docker" [shape=note];
  "var.network_name" [shape=note];

  // Local
  "local.processed_instances";

  // Module
  "module.docker_instances";

  // Resources
  "docker_container.instance";
  "docker_image.instance";
  "docker_network.custom_network";

  // Provider
  "provider[kreuzwerker/docker]" [shape=diamond];

  // Relations avec labels
  "var.instances" -> "local.processed_instances" [label="used by local"];
  "var.host_aws_access_key_id" -> "local.processed_instances" [label="used by local"];
  "var.host_aws_secret_access_key" -> "local.processed_instances" [label="used by local"];
  "var.host_aws_default_region" -> "local.processed_instances" [label="used by local"];

  "local.processed_instances" -> "module.docker_instances" [label="processed_instances input"];

  "var.image" -> "module.docker_instances" [label="module input"];
  "var.container_name" -> "module.docker_instances" [label="module input"];
  "var.command" -> "module.docker_instances" [label="module input"];
  "var.ports" -> "module.docker_instances" [label="module input"];
  "var.env_vars" -> "module.docker_instances" [label="module input"];
  "var.volume_name" -> "module.docker_instances" [label="module input"];
  "var.has_volume" -> "module.docker_instances" [label="module input"];
  "var.acces_to_docker" -> "module.docker_instances" [label="module input"];
  "var.network_name" -> "module.docker_instances" [label="module input"];

  "module.docker_instances" -> "docker_container.instance" [label="creates"];
  "module.docker_instances" -> "docker_image.instance" [label="creates"];
  "module.docker_instances" -> "docker_network.custom_network" [label="uses network"];

  "provider[kreuzwerker/docker]" -> "docker_container.instance" [label="provider"];
  "provider[kreuzwerker/docker]" -> "docker_image.instance" [label="provider"];
  "provider[kreuzwerker/docker]" -> "docker_network.custom_network" [label="provider"];
}
